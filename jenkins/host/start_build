#!/bin/bash
#   Copyright 2016 RIFT.IO Inc
#   Copyright 2016 Telefónica Investigación y Desarrollo S.A.U.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
# start-build is run on a host to start a MDG build
#
# 24 June 2016 -- Jeremy Mordkoff -- Genesis
#              -- Gerardo Garcia


HERE=$(realpath $(dirname $0))
OSM_JENKINS=$(dirname $HERE)
. $OSM_JENKINS/common/all_funcs

[ $# -lt 1 ] && FATAL "arg is MDG name"

export OSM_MDG=$1
export HTTP_PROXY=$4
export HTTPS_PROXY=$5
export NO_PROXY=$6
shift
OSM_load_config

if ! container_exists $OSM_BUILD_CONTAINER; then
	CONTAINER_OPTS=""
	[[ "$OSM_BUILD_CONTAINER_PRIVILEGED" == yes ]] && CONTAINER_OPTS="$CONTAINER_OPTS -c security.privileged=true"
	[[ "$OSM_BUILD_CONTAINER_ALLOW_NESTED" == yes ]] && CONTAINER_OPTS="$CONTAINER_OPTS -c security.nesting=true"
	create_container $OSM_BASE_IMAGE $OSM_BUILD_CONTAINER $CONTAINER_OPTS
	wait_container_up $OSM_BUILD_CONTAINER
	RE="fedora|fc[0-9]"
	if [[ $OSM_BASE_IMAGE =~ $RE ]]; then
		container_exec $OSM_BUILD_CONTAINER yum -y install git tar make sudo
	else
                # @vasgl: Proxy Configuration
		# container_exec $OSM_BUILD_CONTAINER whoami
		container_exec $OSM_BUILD_CONTAINER export http_proxy=$HTTP_PROXY
		container_exec $OSM_BUILD_CONTAINER export https_proxy=$HTTPS_PROXY
		container_exec $OSM_BUILD_CONTAINER export no_proxy=$NO_PROXY

                ## This code caused a Permission Denied ERROR
		# container_exec $OSM_BUILD_CONTAINER sudo echo "http_proxy=http://icache.intranet.gr:80" >> /etc/environment
		# container_exec $OSM_BUILD_CONTAINER sudo echo "https_proxy=http://icache.intranet.gr:80" >> /etc/environment
		# container_exec $OSM_BUILD_CONTAINER sudo echo "no_proxy=localhost,127.0.0.0/8,10.0.0.0/8,*.local" >> /etc/environment

		# container_exec $OSM_BUILD_CONTAINER sudo echo 'Acquire::http::Proxy "http://icache.intranet.gr:80";' >> /etc/apt/apt.conf.d/70debconf
		# container_exec $OSM_BUILD_CONTAINER sudo echo 'Acquire::https::Proxy "http://icache.intranet.gr:80";' >>/etc/apt/apt.conf.d/70debconf

                ## This code solved the problem

                echo 'echo "http_proxy=HTTP_PROXY_MOCK" >> /etc/environment;
                      echo "https_proxy=HTTPS_PROXY_MOCK" >> /etc/environment;
                      echo "no_proxy=NO_PROXY_MOCK" >> /etc/environment;
                      echo "HTTP_PROXY=HTTP_PROXY_MOCK" >> /etc/environment;
                      echo "HTTPS_PROXY=HTTPS_PROXY_MOCK" >> /etc/environment;
                      echo "NO_PROXY=NO_PROXY_MOCK" >> /etc/environment;
                      echo "export http_proxy='$HTTP_PROXY'" >> .bashrc;
                      echo "export https_proxy='$HTTPS_PROXY'" >> .bashrc;
                      echo "export no_proxy='$NO_PROXY'" >> .bashrc;
                      echo "Acquire::http::Proxy HTTP_PROXY_MOCK;" >> /etc/apt/apt.conf.d/70debconf;
                      echo "Acquire::https::Proxy HTTPS_PROXY_MOCK;" >> /etc/apt/apt.conf.d/70debconf;
                      echo "Acquire::ftp::Proxy HTTP_PROXY_MOCK;" >> /etc/apt/apt.conf.d/70debconf' | lxc exec RO bash


                container_exec $OSM_BUILD_CONTAINER sed -i 's@HTTP_PROXY_MOCK@'\""$http_proxy"\"'@' /etc/environment
                container_exec $OSM_BUILD_CONTAINER sed -i 's@HTTPS_PROXY_MOCK@'\""$https_proxy"\"'@' /etc/environment
                container_exec $OSM_BUILD_CONTAINER -- sed -i 's@NO_PROXY_MOCK@'\""$no_proxy"\"'@' /etc/environment

                container_exec $OSM_BUILD_CONTAINER -- sed -i 's@HTTP_PROXY_MOCK@'\""$http_proxy"\"'@' /etc/apt/apt.conf.d/70debconf
                container_exec $OSM_BUILD_CONTAINER -- sed -i 's@HTTPS_PROXY_MOCK@'\""$https_proxy"\"'@' /etc/apt/apt.conf.d/70debconf
                container_exec $OSM_BUILD_CONTAINER -- sed -i 's@NO_PROXY_MOCK@'\""$no_proxy"\"'@' /etc/apt/apt.conf.d/70debconf

		container_exec $OSM_BUILD_CONTAINER git config --global http.proxy $HTTPS_PROXY
		container_exec $OSM_BUILD_CONTAINER git config --global https.proxy $HTTP_PROXY
		container_exec $OSM_BUILD_CONTAINER apt -y install git realpath make sudo 
	fi
	if [ ${OSM_USE_LOCAL_DEVOPS:-false} ]; then
		container_push_devops $OSM_BUILD_CONTAINER
	else
		container_exec $OSM_BUILD_CONTAINER git clone ${OSM_GIT_URL}/devops
	fi
else
	if [ ${OSM_USE_LOCAL_DEVOPS:-false} ]; then
		container_push_devops $OSM_BUILD_CONTAINER
	else
		container_exec $OSM_BUILD_CONTAINER git -C devops pull
	fi
fi

container_exec $OSM_BUILD_CONTAINER ./devops/jenkins/$OSM_MDG/start_build $*
RC=$?
INFO "$OSM_MDG build complete. Return code was $RC"
exit $RC

